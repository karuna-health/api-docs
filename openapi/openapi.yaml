openapi: 3.0.2
info:
  version: 1.0.0
  title: Karuna API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Karuna Health API Support
    email: antares@meetkaruna.com
    url: "https://www.meetkaruna.com/"
  x-logo:
    url: "https://karuna-health.github.io/api-docs/logo.png"
  description: >
    # Integrating with Karuna

    ## Overview

    Karuna's platform allows care providers to interact with patients in simple,
    intuitive ways. Patients can have conversations with their care providers
    using tools and channels they already have access to (phone calls, SMS,
    email, etc.), and care providers can see all of these conversations in a
    single shared inbox for each patient.  


    Karuna's APIs expose a broad set of platform functionality, and can be used
    to build out deep integrations.

    ## Core Concepts

    ### Patients

    Patients in Karuna represent the end users of the system. To patients,
    Karuna's platform is invisible. A patient can use Karuna's platform to
    communicate with members of their care team using different Channels they
    already have access to (e.g., phone calls, SMS, email, etc.).

    ### Navigators

    Navigators are the care providers who provide services to their patients. A
    navigator can participate in conversations with their patients using
    Karuna's platform, and have all of their interactions via different channels
    represented in a single shared inbox per patient.

    ### Care Teams

    Navigators and Patients are connected to each other in Karuna via Care
    Teams. A Care Team Member represents a single relationship between a
    Navigator and a Patient. This allows Navigators to have multiple Patients,
    and for a Patient to have multiple Navigators.

    ### Channels

    A Channel in Karuna represents a contact method for a given Patient.
    Patients can have multiple Channels of different types (sources),
    representing different ways messages can flow to and from a Patient. For
    example, a given Patient's channels might include a landline, a cell phone
    number, and two email addresses.

    ### Interactions

    An Interaction in Karuna represents a high-level unit of communication
    between a Navigator and Patient, as seen by the Navigator. If a Navigator
    wants to send an SMS to a Patient, they will create an Interaction
    representing the intent to deliver this message to the Patient via
    particular patient Channel. Karuna's platform will then translate the
    Interaction into an actual Message which will get delivered to the Patient
    via the correct Channel. Similarly, an incoming Message from a Patient will
    have an associated Interaction created post-hoc.


    Interactions represent all possible conceptual interactions between Patients
    and Navigators on Karuna's platform, including phone calls, missed calls,
    SMS messages, emails, etc.

    ### Messages

    A message represents an actual instance of a delivered or received message
    on Karuna's platform. Messages can be created via Interactions (if
    originated on Karuna's platform and delivered outbound to the Patient), or
    they can be created via an incoming response from a Patient.

servers:
  - url: "https:asdf"
    description: Development server

  - url: "https:asdf2"
    description: Production server

tags:
  - name: User Tokens
    description:
      These endpoints allow you to obtain a `user_token` and check its validity.

  - name: Echo

    description:
      These endpoints allow you to obtain a `user_token` and check its validity.
  - name: User
    description:
      These endpoints allow you to obtain a `user_token` and check its validity.

paths:
  /tokens/check:
    $ref: "paths/user_tokens/tokens@check.yaml"
  "/users/{username}":
    $ref: "paths/users/{username}.yaml"
  /echo:
    $ref: paths/echo.yaml
components:
  securitySchemes:
    user_token:
      $ref: "components/securitySchemes/user_token.yaml"
    service_token:
      $ref: "components/securitySchemes/service_token.yaml"
