openapi: 3.0.2
info:
  version: 1.0.0
  title: Karuna API
  contact:
    name: Karuna Health API Support
    email: antares@meetkaruna.com
    url: 'https://www.meetkaruna.com/'
  x-logo:
    url: 'https://karuna-health.github.io/api-docs/logo.png'
  description: >
    # Integrating with Karuna

    ## Overview

    Karuna's platform allows care providers to interact with patients in simple,
    intuitive ways. Patients can have conversations with their care providers
    using tools and channels they already have access to (phone calls, SMS,
    email, etc.), and care providers can see all of these conversations in a
    single shared inbox for each patient.  


    Karuna's APIs expose a broad set of platform functionality, and can be used
    to build out deep integrations.

    ## Core Concepts

    ### Patients

    Patients in Karuna represent the end users of the system. To patients,
    Karuna's platform is invisible. A patient can use Karuna's platform to
    communicate with members of their care team using different Channels they
    already have access to (e.g., phone calls, SMS, email, etc.).

    ### Navigators

    Navigators are the care providers who provide services to their patients. A
    navigator can participate in conversations with their patients using
    Karuna's platform, and have all of their interactions via different channels
    represented in a single shared inbox per patient.

    ### Care Teams

    Navigators and Patients are connected to each other in Karuna via Care
    Teams. A Care Team Member represents a single relationship between a
    Navigator and a Patient. This allows Navigators to have multiple Patients,
    and for a Patient to have multiple Navigators.

    ### Channels

    A Channel in Karuna represents a contact method for a given Patient.
    Patients can have multiple Channels of different types (sources),
    representing different ways messages can flow to and from a Patient. For
    example, a given Patient's channels might include a landline, a cell phone
    number, and two email addresses.

    ### Interactions

    An Interaction in Karuna represents a high-level unit of communication
    between a Navigator and Patient, as seen by the Navigator. If a Navigator
    wants to send an SMS to a Patient, they will create an Interaction
    representing the intent to deliver this message to the Patient via
    particular patient Channel. Karuna's platform will then translate the
    Interaction into an actual Message which will get delivered to the Patient
    via the correct Channel. Similarly, an incoming Message from a Patient will
    have an associated Interaction created post-hoc.


    Interactions represent all possible conceptual interactions between Patients
    and Navigators on Karuna's platform, including phone calls, missed calls,
    SMS messages, emails, etc.

    ### Messages

    A message represents an actual instance of a delivered or received message
    on Karuna's platform. Messages can be created via Interactions (if
    originated on Karuna's platform and delivered outbound to the Patient), or
    they can be created via an incoming response from a Patient.
servers:
  - url: 'https:asdf'
    description: Development server
  - url: 'https:asdf2'
    description: Production server
tags:
  - name: User Tokens
    description: These endpoints allow you to obtain a `user_token` and check its validity.
  - name: Organizations
    description: Endpoints to manage organizations.
  - name: Patients
    description: Endpoints to manage patients.
  - name: Circle of Care Members
    description: Endpoints to manage circle of care members.
  - name: Navigators
    description: Endpoints to manage navigators.
  - name: Channels
    description: Endpoints to manage channels.
  - name: Interactions
    description: Endpoints to manage interactions.
paths:
  /labels:
    get:
      tags:
        - Organizations
        - Patients
      operationId: getAllPatientLabels
      summary: Get Patient Labels
      description: Get all Labels available for an Organization
      security:
        - service_token: []
          user_token: []
      responses:
        '200':
          description: Available Labels
          content:
            application/json:
              schema:
                type: array
                description: Array of available Labels
                items:
                  $ref: '#/components/schemas/Label'
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /tokens/check:
    get:
      tags:
        - User Tokens
      operationId: tokenCheck
      summary: Token Validity
      description: >-
        Checks the validity of a short-lived or lifetime `user_token`, as
        specified in the `X-User-Token` header.
      security:
        - user_token: []
          service_token: []
      responses:
        '200':
          description: Valid `service_token` AND `user_token`
          content:
            application/json:
              schema:
                type: object
                properties:
                  kind:
                    description: Kind of entity owning the user token
                    type: string
                    enum:
                      - patient
                      - navigator
                    example: navigator
                  identifier:
                    description: Entity's unique identifier
                    type: string
                    example: '21348'
                  organization:
                    description: Organization to which the entity belongs
                    type: string
                    example: karuna
        '401':
          $ref: '#/components/responses/NotAuthorized'
  '/organizations/{slug}':
    get:
      tags:
        - Organizations
      operationId: getOrganizationBySlug
      summary: Get Organization's Details
      description: Get organization's details by slug
      security:
        - service_token: []
      parameters:
        - in: path
          name: slug
          description: Organization slug
          schema:
            type: string
          required: true
          example: karuna
      responses:
        '200':
          description: Organization details
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Organization's name
                    example: Karuna Health
                  phone_number:
                    type: string
                    description: >-
                      Organization's phone number. This is the number patients
                      call and receive messages from.
                    example: '+12345678987'
                  slug:
                    type: string
                    description: Organization's slug
                    example: karuna
                  office_number:
                    type: string
                    description: >-
                      Organization's office number. This is the number we can
                      use to contact the organization.
                    example: '+12345678987'
                  idle_timeout_minutes:
                    type: number
                    description: >-
                      Number of minutes of inactivity after which the navigator
                      will be logged out.
                    example: 180
                  support_admin_navigator_id:
                    type: number
                    description: Organization's admin navigator ID
                    example: 12352
                  record_calls:
                    type: boolean
                    description: Flag specifying whether calls will be recorded by default
                    example: true
                  call_patient_first:
                    type: boolean
                    description: >-
                      Flag specifying whether patients will be called first.
                      Navigators are called first if set to `false`
                    example: true
                  twofactor_enabled:
                    type: boolean
                    description: >-
                      Flag specifying whether two factor auth is enabled for the
                      organization.
                    example: true
                  write_ehr_changes:
                    type: boolean
                    description: >-
                      Flag specifying whether changes will be written to the
                      ehr.
                    example: false
                  disable_ip_pinning:
                    type: boolean
                    description: Dunno
                    example: false
                  disable_call_recording_announcement:
                    type: boolean
                    description: >-
                      Flag specifying whether the announcement of "This call may
                      be recorded" at the beginning of the call should be
                      omitted.
                    example: false
                  check_passwords_against_leaks:
                    type: boolean
                    description: >-
                      Flag specifying whether navigator passwords are checked
                      against leaks.
                    example: false
                  permissioning_restrict_patients:
                    type: boolean
                    description: >-
                      Flag specifying whether permissioning is enabled for the
                      organization.
                    example: false
                  phone_login_enabled:
                    type: boolean
                    description: Dunno
                    example: false
                  pass_through_incoming_caller_id:
                    type: boolean
                    description: >-
                      Flag specifying whether the incoming caller id is passed
                      through to the navigators when connecting calls.
                    example: true
                  enable_daily_digest:
                    type: boolean
                    description: >-
                      Flag specifying whether the organization has Daily Digest
                      enabled.
                    example: true
                  disable_phone_calls:
                    type: boolean
                    description: >-
                      Flag specifying whether calls for the organization are
                      disabled.
                    example: false
                  enable_after_hours_responses:
                    type: boolean
                    description: >-
                      Flag specifying whether automatic responses for after hour
                      interactions are enabled.
                    example: true
                  enable_new_message_email_notifications:
                    type: boolean
                    description: >-
                      Flag specifying whether the organization has email
                      notifications enabled for new messages.
                    example: true
                  enable_campaigns:
                    type: boolean
                    description: >-
                      Flag specifying whether campaigns are enabled for the
                      organization
                    example: true
                  enable_demo_features:
                    type: boolean
                    description: >-
                      Flag specifying whether demo features are enabled for the
                      organization
                    example: true
        '404':
          description: Invalid organization slug
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Type of error
                    type: string
                    example: resource_not_found
                  error_code:
                    description: Error code
                    type: string
                    example: 191
                  message:
                    description: Error message
                    type: string
                    example: Couldn't find that Organization
                  retryable:
                    description: Whether the request is retryable
                    type: boolean
                    example: false
  /patients:
    post:
      tags:
        - Patients
      operationId: postPatient
      summary: Create New Patient
      description: Create a new Patient
      security:
        - service_token: []
          user_token: []
      requestBody:
        description: Details of patient to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: Patient successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /patients/archive:
    post:
      tags:
        - Patients
      operationId: batchArchivePatients
      summary: Archive Patients
      description: Batch archive patients
      security:
        - service_token: []
          user_token: []
      requestBody:
        description: Array of IDs from Patients to be archived
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patient_ids:
                  description: Array of Patient IDs
                  type: array
                  items:
                    description: Patient ID
                    type: number
                    example: 51123
      responses:
        '200':
          description: Archived Patients
          content:
            application/json:
              schema:
                type: array
                description: Array of Patients that were just archived
                items:
                  $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /patients/merge:
    post:
      tags:
        - Patients
      operationId: mergePatients
      summary: Merge Patients
      description: Merge Patients
      security:
        - service_token: []
          user_token: []
      requestBody:
        description: IDs of Patients to be merged
        required: true
        content:
          application/json:
            schema:
              properties:
                source:
                  type: object
                  description: ID of source Patient
                  properties:
                    id:
                      type: number
                      description: Patient ID
                      example: 1231
                destination:
                  type: object
                  description: ID of destination Patient
                  properties:
                    id:
                      type: number
                      description: Patient ID
                      example: 90234
      responses:
        '200':
          description: Patients successfully merged
        '401':
          $ref: '#/components/responses/NotAuthorized'
  '/patients/{patientId}':
    get:
      tags:
        - Patients
      operationId: getPatient
      summary: Get Patient
      description: Get all patient details
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      responses:
        '200':
          description: Patient details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
    delete:
      tags:
        - Patients
      operationId: discardPatient
      summary: Discard Patient
      description: Discard Patient
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      responses:
        '200':
          description: Discarded Patient details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
    patch:
      tags:
        - Patients
      operationId: patchPatient
      summary: Update Patient
      description: Update Patient details
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      requestBody:
        description: Patient details to be updated
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patient:
                  $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: Updated Patient details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/labels/{labelId}':
    put:
      tags:
        - Patients
      operationId: assignPatientLabel
      summary: Assign Patient Label
      description: Assign Label to a Patient
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/LabelId'
      responses:
        '200':
          description: Label assigned to Patient
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
    delete:
      tags:
        - Patients
      operationId: unassignPatientLabel
      summary: Unassign Patient Label
      description: Unassign Label from a Patient
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/LabelId'
      responses:
        '200':
          description: Label unassigned to Patient
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/call_forwarding_override':
    post:
      tags:
        - Patients
      operationId: initiateCallForwardingOverride
      summary: Initiate Call Forwading Override
      description: Initiate Call Forwading Override
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      requestBody:
        description: >-
          ID of navigator to whom calls will be forwarded and call forwarding
          ending date
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                expires_on:
                  type: string
                  description: Timestamp of when the call forwarding will end
                  example: 2020-12-14T00:00:00.000Z
                navigator_id:
                  type: number
                  description: ID of Navigator to forward calls to
                  example: 23409
      responses:
        '200':
          description: Call forwarded to Navigator
          content:
            application/json:
              schema:
                type: object
                properties:
                  navigator:
                    description: Navigator to whom calls will be forwarded
                    $ref: '#/components/schemas/Navigator'
                  expires_on:
                    type: string
                    description: Timestamp of when the call forwarding will end
                    example: 2020-12-14T00:00:00.000Z
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
    delete:
      tags:
        - Patients
      operationId: stopCallForwardingOverride
      summary: Stop Call Forwading Override for a patient
      description: Stop Call Forwading Override
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      responses:
        '200':
          description: Call forwarding override stopped
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/follow':
    put:
      tags:
        - Patients
        - Navigators
      operationId: unfollowPatient
      summary: Unollow Patient
      description: >-
        Remove patient from the currently logged in navigator's followed
        patients
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      responses:
        '200':
          description: Updated patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/unfollow':
    put:
      tags:
        - Patients
        - Navigators
      operationId: followPatient
      summary: Follow Patient
      description: Add patient to the currently logged in navigator's followed patients
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      responses:
        '200':
          description: Updated patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/primary_navigator':
    put:
      tags:
        - Patients
        - Navigators
      operationId: assignPrimaryNavigator
      summary: Assign Primary Navigator
      description: Mark a navigator as primary navigator for a patient
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      requestBody:
        description: ID of navigator to be marked as primary
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primary_navigator_id:
                  type: number
                  description: Navigator ID
                  example: 24359
      responses:
        '200':
          description: Updated patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/channels':
    post:
      tags:
        - Channels
      operationId: postPatientChannel
      summary: Create Patient Channel
      description: Create new channel for a patient
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      requestBody:
        description: Details of channel to be created
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  $ref: '#/components/schemas/Channel'
      responses:
        '201':
          description: Patient channel created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/channels/{channelId}':
    patch:
      tags:
        - Channels
      operationId: patchPatientChannel
      summary: Patch Patient Channel
      description: Update Patient Channel Details
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/ChannelId'
      requestBody:
        description: Channel details to be updated
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Patient Channel updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
    delete:
      tags:
        - Channels
        - Patients
      operationId: deletePatientChannel
      summary: Delete Patient Channel
      description: Delete Patient Channel
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/ChannelId'
      responses:
        '200':
          description: Patient channel deleted
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/interactions':
    get:
      tags:
        - Interactions
      operationId: getPatientInteractions
      summary: List Patient Interactions
      description: Get paginated list of patient interactions.
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/PaginationNext'
      responses:
        '200':
          description: Patient Interactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/PaginatedResults'
                  interactions:
                    type: array
                    description: List of patient interactions
                    items:
                      $ref: '#/components/schemas/Interaction'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/care_team_members/{careTeamMemberId}':
    delete:
      tags:
        - Patients
        - Navigators
      operationId: deleteCareTeamMember
      summary: Delete Care Team Member
      description: Unassign navigator from a patient
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/CareTeamMemberId'
      responses:
        '200':
          description: Navigator unassigned
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/circle_of_care_members':
    post:
      tags:
        - Patients
        - Circle of Care Members
      operationId: createCcm
      summary: Create Circle of Care Member
      description: Create new Circle of Care Member for a patient
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      requestBody:
        description: Details of Circle of Care Member to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CircleOfCareMember'
      responses:
        '200':
          description: Circle of Care Members successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CircleOfCareMember'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
    get:
      tags:
        - Patients
        - Circle of Care Members
      operationId: getPatientCcms
      summary: Patient Circle of Care Members
      description: Get Patient's Circle of Care Members Details
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
      responses:
        '200':
          description: Patient's Circle of Care Members
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/PaginatedResults'
                  circle_of_care_members:
                    type: array
                    items:
                      $ref: '#/components/schemas/CircleOfCareMember'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/circle_of_care_members/{circleOfCareMemberId}':
    patch:
      tags:
        - Circle of Care Members
      operationId: updateCircleOfCareMember
      summary: Update Circle of Care Member
      description: Update Circle of Care Member Details
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/CircleOfCareMemberId'
      requestBody:
        description: Circle of Care Member details to be updated
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                circle_of_care_member:
                  $ref: '#/components/schemas/CircleOfCareMember'
      responses:
        '200':
          description: Circle of Care Member updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CircleOfCareMember'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/circle_of_care_members/{circleOfCareMemberId}/channels':
    post:
      tags:
        - Channels
      operationId: postCcmChannel
      summary: Create Circle of Care Member Channel
      description: Create Circle of Care Member Channel
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/CircleOfCareMemberId'
      requestBody:
        description: Details of Channel to be created
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  $ref: '#/components/schemas/Channel'
      responses:
        '201':
          description: Circle of Care Member channel created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/circle_of_care_members/{circleOfCareMemberId}/channels/{channelId}':
    delete:
      tags:
        - Channels
      operationId: deleteCcmChannel
      summary: Delete Circle of Care Member Channel
      description: Delete Circle of Care Member Channel
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/CircleOfCareMemberId'
        - $ref: '#/components/parameters/ChannelId'
      responses:
        '200':
          description: Circle of Care Member Channel deleted
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
    patch:
      tags:
        - Channels
      operationId: patchCcmChannel
      summary: Patch Circle of Care Member Channel
      description: Update Circle of Care Member Channel Details
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/CircleOfCareMemberId'
        - $ref: '#/components/parameters/ChannelId'
      requestBody:
        description: Channel details to be updated
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Circle of Care Member Channel updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/patients/{patientId}/circle_of_care_members/{circleOfCareMemberId}/interactions':
    get:
      tags:
        - Interactions
        - Circle of Care Members
      operationId: getCcmInteractions
      summary: List Circle of Care Member Interactions
      description: Get paginated list of Circle of Care Member interactions.
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PatientId'
        - $ref: '#/components/parameters/CircleOfCareMemberId'
        - $ref: '#/components/parameters/PaginationNext'
      responses:
        '200':
          description: Circle of Care Member Interactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/PaginatedResults'
                  interactions:
                    type: array
                    description: List of Circle of Care Member interactions
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Interaction'
                        - type: object
                          properties:
                            circle_of_care_member:
                              $ref: '#/components/schemas/CircleOfCareMember'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  /navigators/token:
    post:
      tags:
        - User Tokens
      operationId: getNavigatorToken
      summary: Get Navigator Token
      description: >-
        Trade Navigator's credentials for a short-lived `user_token`.


        Send this user_token as the X-User-Token header in future requests to
        authenticate. This token is valid for 30 minutes, and is extended for
        another 30 minutes with every use.
      security:
        - service_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                navigator:
                  type: object
                  properties:
                    handle:
                      description: Unique navigator handle
                      type: string
                      example: gcasas
                    password:
                      description: >-
                        Password for the navigator handle belonging to the
                        specified organization
                      type: string
                      example: abc123password
                organization:
                  type: object
                  properties:
                    slug:
                      type: string
                      example: karuna
                      description: Organization slug
      responses:
        '200':
          description: Valid navigator credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  ip:
                    type: object
                    properties:
                      raw:
                        type: string
                        description: Raw ip address
                        example: 1.1.1.1
                      masked:
                        type: string
                        description: Masked ip address
                        example: 1.1.1.1
                  message:
                    type: string
                    description: Response message
                    example: login_successful
                  token:
                    type: string
                    description: Authenticated Navigator's `user_token`
                    example: ff710fbb-9fb2-43ef-9a26-70e026572362
        '401':
          description: Invalid navigator credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Type of error
                    type: string
                    example: invalid_handle_or_password
  /navigators/delete:
    delete:
      tags:
        - Navigators
      operationId: invalidateNavigatorToken
      summary: Invalidate navigator's user_token
      description: Invalidate navigator's `user_token`
      security:
        - service_token: []
          user_token: []
      responses:
        '200':
          description: Navigator's `user_token` successfully invalidated
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /navigators/reset_password:
    post:
      tags:
        - Navigators
      operationId: resetNavigatorPassword
      summary: Reset Navigator Password
      description: >-
        Hitting this endpoint causes the server to send an email to the
        navigator with steps on how to reset their password.
      security:
        - service_token: []
      requestBody:
        description: Navigator handle and organization slug
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                navigator:
                  type: object
                  properties:
                    handle:
                      type: string
                      description: Navigator handle
                      example: gcasas
                organization:
                  type: object
                  properties:
                    slug:
                      type: string
                      description: Organization slug
                      example: karuna
      responses:
        '200':
          description: Reset password process triggered
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /navigators/update_password:
    post:
      tags:
        - Navigators
      operationId: updateNavigatorPassword
      summary: Update Navigator Password
      description: >-
        Update navigator's password with the `reset_token` that's sent to the
        user via email.
      security:
        - service_token: []
      requestBody:
        description: New password and `reset_token`
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                navigator:
                  type: object
                  properties:
                    password:
                      type: string
                      description: New password
                      example: password123
                    reset_token:
                      type: string
                      description: Token sent to the user via email
                      example: asdfasdfa-asdfasq23345-asdfasdf
      responses:
        '200':
          description: Password successfully updated
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /navigators:
    get:
      tags:
        - Navigators
      operationId: getNavigators
      summary: List Navigators
      description: Get paginated list of navigators.
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/PaginationNext'
        - $ref: '#/components/parameters/NavigatorsQuerySearch'
        - $ref: '#/components/parameters/NavigatorsQuerySortKey'
        - $ref: '#/components/parameters/QuerySortOrder'
      responses:
        '200':
          description: Organization navigators
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/PaginatedResults'
                  navigators:
                    type: array
                    description: List of navigators
                    items:
                      $ref: '#/components/schemas/Navigator'
                  meta:
                    type: object
                    properties:
                      data_key:
                        type: string
                        enum:
                          - navigators
                        example: navigators
        '401':
          $ref: '#/components/responses/NotAuthorized'
  '/navigators/{navigatorId}':
    get:
      tags:
        - Navigators
      operationId: getNavigator
      summary: Get Navigator
      description: Get all navigator details
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/NavigatorId'
      responses:
        '200':
          description: Navigator details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Navigator'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
    patch:
      tags:
        - Navigators
      operationId: patchNavigator
      summary: Patch Navigator
      description: Update navigator details
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/NavigatorId'
      requestBody:
        description: Navigator details to be updated
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                navigator:
                  allOf:
                    - $ref: '#/components/schemas/Navigator'
                    - $ref: '#/components/schemas/NavigatorUnreadCounts'
      responses:
        '200':
          description: Navigator details
          content:
            application/json:
              schema:
                type: object
                properties:
                  navigator:
                    allOf:
                      - $ref: '#/components/schemas/Navigator'
                      - $ref: '#/components/schemas/NavigatorUnreadCounts'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
  '/navigators/{navigatorId}/channels':
    post:
      tags:
        - Channels
      operationId: postNavigatorChannel
      summary: Create Navigator Channel
      description: Create new channel for a navigator
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/NavigatorId'
      requestBody:
        description: Details of channel to be created
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  $ref: '#/components/schemas/Channel'
      responses:
        '201':
          description: Navigator channel created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/NotAuthorized'
  '/navigators/{navigatorId}/channels/{channelId}':
    patch:
      tags:
        - Channels
      operationId: patchNavigatorChannel
      summary: Patch Navigator Channel
      description: Update Navigator Channel Details
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/NavigatorId'
        - $ref: '#/components/parameters/ChannelId'
      requestBody:
        description: Channel details to be updated
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Navigator channel updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
    delete:
      tags:
        - Channels
        - Navigators
      operationId: deleteNavigatorChannel
      summary: Delete Navigator Channel
      description: Delete Navigator Channel
      security:
        - service_token: []
          user_token: []
      parameters:
        - $ref: '#/components/parameters/NavigatorId'
        - $ref: '#/components/parameters/ChannelId'
      responses:
        '200':
          description: Navigator channel deleted
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
components:
  securitySchemes:
    user_token:
      type: apiKey
      in: header
      name: X-User-Token
      description: >-
        A token identifying the user making the request. You can obtain this
        token with a `service_token` and the correct credentials.
    service_token:
      type: apiKey
      in: header
      name: X-Service-Token
      description: >-
        A token identifying the service or organization making the request. This
        token is global to your organization, and will be provided to you by
        Karuna.
  schemas:
    Label:
      type: object
      description: Patient Label
      properties:
        id:
          type: number
          description: Label ID
          example: 18273
        slug:
          type: string
          description: Unique Label slug
          example: requested-call
        display_name:
          type: string
          description: Label display name
          example: Requested Call
        color:
          type: string
          description: Unique Label color
          example: pink
        user_assignable:
          type: boolean
          description: >-
            Flag specifying whether a label can be manually assigned by a
            Navigator to Patient.
          example: true
    DefaultChannelId:
      type: number
      description: >-
        ID of the channel to select as default and be used for automated
        communications
      example: 1847
    Gender:
      type: string
      enum:
        - unknown
        - male
        - female
        - other
      description: Patient's gender
      example: male
    NavigatorBasicDetails:
      type: object
      description: Navigator Basic Details
      properties:
        id:
          type: number
          description: Navigator ID
          example: 8374
        first_name:
          type: string
          description: Navigator first name
          example: Gual
        middle_name:
          type: string
          description: Navigator middle name
          example: Antonio
        last_name:
          type: string
          description: Navigator last name
          example: Casas
        handle:
          type: string
          description: Navigator Handle
          example: gcasas
    Channel:
      type: object
      description: Channel details
      properties:
        id:
          type: number
          description: Channel's ID
          example: 12345
        source:
          type: string
          enum:
            - email
            - landline
            - sms
            - push
          description: Type of channel
          example: sms
        identifier:
          type: string
          description: Channel's identifier
          example: '+12345678987'
        verified:
          type: boolean
          description: Dunno
          example: false
        label:
          type: string
          description: Channel's label
          example: Personal cell
        note:
          type: string
          description: Note related to the channel
          example: 'Do not call after 13:00'
        meta:
          type: object
          properties:
            lookup_failed:
              type: boolean
              description: >-
                Flag specifying whether the number lookup failed if the channel
                is a phone number.
              example: false
            carrier:
              type: object
              description: Carrier metadata
              properties:
                name:
                  type: string
                  description: Carrier name
                  example: Verizon Wireless
                type:
                  type: string
                  example: 1
        uuid:
          type: string
          description: Dunno
          example: Dunno
        organization_id:
          type: number
          description: ID of organization to which the channel and channel owner belong
          example: 4
        authenticated:
          type: boolean
          description: Dunno
          example: false
        has_consent:
          type: boolean
          description: >-
            Flag specifying whether the owner has granted consent for
            communication over the channel
          example: true
    Channels:
      type: array
      description: Communication channels
      items:
        $ref: '#/components/schemas/Channel'
    RelationshipType:
      type: string
      enum:
        - mother
        - father
        - son
        - daughter
        - grandfather
        - grandmother
        - grandson
        - granddaughter
        - husband
        - wife
        - uncle
        - aunt
        - brother
        - sister
        - friend
        - guardian
        - caregiver
        - other
        - niece
        - nephew
      description: Circle of Care Member's relationship type
      example: mother
    ConversationReadMarker:
      type: object
      description: Navigator ID with the last interaction ID the navigators has read
      properties:
        navigator_id:
          type: number
          description: ID of navigator
          example: 39478
        last_read:
          type: number
          description: ID of last read interaction
          example: 89712
        read_at:
          type: string
          description: Timestamp of when the interaction was read
          example: '2020-07-03T17:10:57.567Z'
    ConversationReadMarkers:
      type: array
      description: Information about what interactions have been read by what navigators
      items:
        $ref: '#/components/schemas/ConversationReadMarker'
    CurrentNavigatorConversationReadMarker:
      allOf:
        - description: Conversation read-marker for the currently logged in navigator
        - $ref: '#/components/schemas/ConversationReadMarker'
    CircleOfCareMember:
      type: object
      description: Circle of Care Member data
      properties:
        id:
          type: number
          description: Circle of Care Member ID
          example: 91723
        first_name:
          type: string
          description: Circle of Care Member first name
          example: Sam
        middle_name:
          type: string
          description: Circle of Care Member middle name
          example: James
        last_name:
          type: string
          description: Circle of Care Member last name
          example: Mauldin
        gender:
          $ref: '#/components/schemas/Gender'
        relationship_type:
          $ref: '#/components/schemas/RelationshipType'
        channels:
          $ref: '#/components/schemas/Channels'
        default_channel_id:
          $ref: '#/components/schemas/DefaultChannelId'
        primary_language:
          type: string
          description: Primary language
          example: spa
        care_team_read_markers:
          $ref: '#/components/schemas/ConversationReadMarkers'
        current_navigator_read_marker:
          $ref: '#/components/schemas/CurrentNavigatorConversationReadMarker'
    ChannelOwnerDetails:
      type: object
      description: Channel owner details
      properties:
        owner_type:
          type: string
          description: Type of entity that owns the channel
          enum:
            - patient
            - navigator
            - circle_of_care_member
          example: navigator
        owner_id:
          type: number
          description: ID of entity that owns the channel
          example: 1232
    Navigator:
      allOf:
        - $ref: '#/components/schemas/NavigatorBasicDetails'
        - type: object
          description: Navigator Data
          properties:
            role:
              type: string
              description: Navigator's role
              enum:
                - normal
                - admin
              example: normal
            patients_assigned:
              type: number
              description: Count of patients the navigator has assigned to them
              example: 27
            clinician_id:
              type: string
              description: Dunno
              example: Dunno
            preferred_medium:
              type: string
              description: Dunno
              example: async
            preferred_channel_id:
              type: number
              description: >-
                ID of channel that's marked as preferred for automated
                communications
              example: 3842
            primary_patients_assigned:
              type: number
              description: >-
                Count of patients for which the navigator is marked as primary
                navigator
              example: 12
            last_login:
              type: string
              description: Last login's timestamp
              example: 2020-12-01T17:05:40.437Z
            organization_role:
              type: string
              description: >-
                Role that the navigator performs at the organization. Each
                organization has their own custom roles. If no role is
                specified, the role "navigator" is assumed.
              example: screener
            subscribed_to:
              type: array
              description: Services to which the navigator is subscribed.
              items:
                type: string
                example: daily_digest
            channels:
              type: array
              description: Navigator's channels
              items:
                allOf:
                  - $ref: '#/components/schemas/Channel'
                  - $ref: '#/components/schemas/ChannelOwnerDetails'
    Patient:
      type: object
      description: Patient data
      properties:
        id:
          type: string
          description: Patient ID
          example: 1342
        clinical_id:
          type: string
          description: Patient's clinical ID
          example: 1234jkasa-asdfasdf13
        default_channel_id:
          $ref: '#/components/schemas/DefaultChannelId'
        primary_navigator_id:
          type: number
          description: ID of navigator that's been marked as primary for the patient
          example: 9273
        assigned_label_ids:
          type: array
          description: IDs of labels that the patient currently has assigned to them
          items:
            type: number
            description: ID of label
            example: 238
        first_name:
          type: string
          description: Patient's first name
          example: Gual
        middle_name:
          type: string
          description: Patient's middle name
          example: Antonio
        last_name:
          type: string
          description: Patient's last name
          example: Casas
        gender:
          $ref: '#/components/schemas/Gender'
        country:
          type: string
          description: Patient's country
          example: Mexico
        state:
          type: string
          description: Patient's state
          example: Coahuila
        city:
          type: string
          description: Patient's city
          example: Torreón
        postal:
          type: string
          description: Patient's postal code
          example: 27100
        street_address:
          type: string
          description: Patient's street address
          example: 8th Street
        timezone:
          type: string
          description: Patient's timezone
          example: Mexico_City
        dob:
          type: string
          description: Patient's birthdate (YYYY-MM-DD)
          example: 1991-10-02T00:00:00.000Z
        photo:
          type: string
          description: Url to patient's photo
          example: 'https://i.pravatar.cc/300'
        extra:
          type: object
          description: Extra properties to store
        mrn:
          type: string
          description: Patient's Medical Record Number
          example: 12342
        care_team_members:
          type: array
          description: IDs of patient's Care Team Members
          items:
            type: number
            description: ID of Care Team Member
        primary_language:
          type: string
          description: Patient's primary language
          example: spa
        source:
          type: string
          description: Source from which the patient was created
          example: file_upload
        default_medium:
          type: string
          description: Dunno
          example: Dunno
        restricted:
          type: boolean
          description: >-
            Flag specifying whether access to this patient should be restricted
            if permissioning is enabled for the patient's organization
          example: true
        archive_event:
          type: object
          description: Information about archive/unarchive events
          properties:
            event_at:
              type: string
              description: Timestamp (YYYY-MM-DD) from when the archive event happened
              example: 2020-05-14T00:00:00.000Z
            actor:
              $ref: '#/components/schemas/NavigatorBasicDetails'
            reason:
              type: string
              enum:
                - karuna_action
                - navigator_action
                - import_action
              description: Source of action
              example: navigator_action
            action:
              type: string
              enum:
                - archive
                - unarchive
              description: Specifies the type of archive event.
              example: archive
        latest_associated_interaction:
          type: number
          description: ID of latest interaction belonging to the patient
          example: 92379
        latest_associated_unread_interaction:
          type: number
          description: >-
            ID of latest interaction belonging to the patient that has not been
            read
          example: 92372
        latest_associated_unread_incoming_text_interaction:
          type: number
          description: >-
            ID of latest interaction (specifically incoming text) belonging to
            the patient that has not been read
          example: 92371
        channels:
          $ref: '#/components/schemas/Channels'
        circle_of_care_members:
          type: array
          description: Circle of Care Members
          items:
            $ref: '#/components/schemas/CircleOfCareMember'
        notes:
          type: array
          description: Additional patient notes
          items:
            type: object
            description: Patient Note
            properties:
              id:
                type: number
                description: Note ID
                example: 9234
              body:
                type: string
                description: Body of the note
                example: This patient visited ER twice last month
              title:
                type: string
                description: Title of the note
                example: Sensitive Patient
              source:
                type: string
                enum:
                  - manual
                  - redox
                description: >-
                  Source of the note. `manual`: manually created notes; `redox`:
                  created through data import from redox
                example: manual
        internal_testing:
          type: boolean
          description: >-
            Flag specifying whether the patient was created for internal testing
            purposes
          example: false
        current_navigator:
          $ref: '#/components/schemas/Navigator'
        call_forwarding_override:
          type: object
          description: Information about who to forward calls
          properties:
            navigator:
              type: number
              description: ID of navigator to redirect calls to
              example: 12843
            expires_on:
              type: string
              description: >-
                Timestamp (YYYY-MM-DD) indicating when the call forwarding
                override will end
              example: 2020-11-23T00:00:00.000Z
        care_team_read_markers:
          type: array
          description: >-
            Information about what interactions have been read by what
            navigators
          items:
            $ref: '#/components/schemas/ConversationReadMarker'
        current_navigator_read_marker:
          $ref: '#/components/schemas/CurrentNavigatorConversationReadMarker'
    PaginatedResults:
      type: object
      description: Pagination data
      properties:
        results:
          type: number
          description: Number of results included per page
          example: 10
        total:
          type: number
          description: Total count of results found for query
          example: 512
        page:
          type: number
          description: Current results page
          example: 3
        next:
          type: string
          description: Pointer to next results page. `null` if there is no next page.
          example: 05d9a970030000000a04
    Call:
      type: object
      description: Call details
      properties:
        id:
          type: number
          description: Call ID
          example: 12394
        duration:
          type: number
          description: Call duration in seconds
          example: 25
        created_at:
          type: string
          description: Timestamp
          example: 2020-11-23T00:00:00.000Z
        recording_url:
          type: string
          description: URL to access the call recording if available
          example: 'https://callrecording.com'
        transcript_url:
          type: string
          description: URL to access the call transcript if available
          example: 'https://calltranscript.com'
        recording_source:
          type: string
          enum:
            - live
            - message
          description: >-
            live: call was answered by a patient; message: call went to
            voicemail
          example: live
        subject:
          type: string
          description: Call subject
          example: Transportation arrangement
        summary:
          type: string
          description: Call summary
          example: 'A taxi is picking them up at 14:20'
        recording_purged:
          type: boolean
          description: Flag specifying whether the recording for the call has been purged
          example: false
    Message:
      type: object
      description: Message Data
      properties:
        id:
          type: number
          description: Message ID
          example: 89072
        title:
          type: string
          description: Dunno
          example: Dunno
        body:
          type: string
          description: Message body
          example: 'Hello Gual, how are you doing today?'
        created_at:
          type: string
          description: Timestamp
          example: 2020-10-23T00:00:00.000Z
        channel:
          allOf:
            - $ref: '#/components/schemas/Channel'
            - $ref: '#/components/schemas/ChannelOwnerDetails'
        direction:
          type: string
          enum:
            - incoming
            - outgoing
          description: >-
            incoming: message sent by a Patient or Circle of Care Member;
            outgoing: message sent by a Navigator or system generated
          example: incoming
        status:
          type: string
          enum:
            - delivered
            - inflight
          description: Message status
          example: delivered
        id_from_channel:
          type: string
          description: Dunno
          example: Dunno
        interaction_id:
          type: number
          description: ID of interaction the message belongs to
          example: 2372
        call:
          $ref: '#/components/schemas/Call'
    Interaction:
      type: object
      description: Interaction Data
      properties:
        id:
          type: number
          description: Interaction ID
          example: 98345
        patient:
          type: object
          properties:
            id:
              type: string
              description: Patient ID
              example: 1342
            clinical_id:
              type: string
              description: Patient's clinical ID
              example: 1234jkasa-asdfasdf13
            default_channel_id:
              type: number
              description: >-
                ID of the channel to select as default and be used for automated
                communications
              example: 1847
            primary_navigator_id:
              type: number
              description: ID of navigator that's been marked as primary for the patient
              example: 9273
            assigned_label_ids:
              type: array
              description: IDs of labels that the patient currently has assigned to them
              items:
                type: number
                description: ID of label
                example: 238
        navigator:
          $ref: '#/components/schemas/NavigatorBasicDetails'
        spec:
          type: object
          properties:
            call:
              type: boolean
              description: Flag specifying whether the interaction was a call
              example: true
            type:
              type: string
              description: >-
                Specifies if the interaction was a message sent in the
                conversation or an internal comment
              enum:
                - conversation
                - comment
              example: conversation
            source:
              type: string
              description: Dunno
              example: nasdaq
            incoming_message_id:
              type: number
              description: Dunno
              example: 2345
        messages:
          type: array
          description: List of interaction messages
          items:
            $ref: '#/components/schemas/Message'
    NavigatorUnreadCounts:
      type: object
      description: Navigator unread counts
      properties:
        unread_count:
          type: number
          description: Count of unread interactions from any assigned patients.
          example: 13
        unknown_count:
          type: number
          description: Count of unread interactions from unknown senders.
          example: 4
        unread_mention_count:
          type: number
          description: Count of unread mentions.
          example: 7
  responses:
    NotAuthorized:
      description: Invalid `service_token` or `user_token`
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                description: Type of error
                type: string
                example: bad_user_token
              error_code:
                description: Error code
                type: string
                example: 7943
              message:
                description: Error message
                type: string
                example: bea198df-27fa-4190-bbe2-25197259d9a2d
              retryable:
                description: >-
                  Whether the request is retryable. This is mostly used by the
                  backend services.
                type: boolean
                example: false
    ResourceNotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                description: Type of error
                type: string
                example: resource_not_found
              error_code:
                description: Error code
                type: string
                example: 191
              message:
                description: Error message
                type: string
                example: Couldn't find that Resource
              retryable:
                description: >-
                  Whether the request is retryable. This is mostly used by the
                  backend services.
                type: boolean
                example: false
  parameters:
    PatientId:
      in: path
      name: patientId
      description: Patient ID
      schema:
        type: number
      required: true
      example: 8324
    LabelId:
      in: path
      name: labelId
      description: Label ID
      schema:
        type: number
      required: true
      example: 9128
    ChannelId:
      in: path
      name: channelId
      description: Channel ID
      schema:
        type: number
      required: true
      example: 173
    PaginationNext:
      in: query
      name: next
      description: >-
        Pointer to next results page. If not specified, the first results page
        is returned.
      schema:
        type: string
        example: 43bfa6a3010000001902
      required: false
    CareTeamMemberId:
      in: path
      name: careTeamMemberId
      description: Care Team Member ID
      schema:
        type: number
      required: true
      example: 1289
    CircleOfCareMemberId:
      in: path
      name: circleOfCareMemberId
      description: Circle of Care Member ID
      schema:
        type: number
      required: true
      example: 9341
    NavigatorsQuerySearch:
      in: query
      name: search
      description: Navigator names will be queried for an exact match to this string.
      schema:
        type: string
        example: gual
      required: false
    NavigatorsQuerySortKey:
      in: query
      name: 'sort[key]'
      description: Key by which results will be sorted.
      schema:
        type: string
        enum:
          - name
          - created_at
        example: name
      required: false
    QuerySortOrder:
      in: query
      name: 'sort[order]'
      description: Order in which results will be sorted.
      schema:
        type: string
        enum:
          - asc
          - desc
        example: asc
      required: false
    NavigatorId:
      in: path
      name: navigatorId
      description: Navigator ID
      schema:
        type: number
      required: true
      example: 1241
